#include <Arduino.h>
#include <DFRobotDFPlayerMini.h>
#include <HardwareSerial.h>

// --- Czujniki (blaszki) ---
#define SENSOR1_PIN 27
#define SENSOR2_PIN 33

// --- Przekaźnik ---
#define RELAY_PIN 26

// --- Silniki wibracyjne ---
#define MOTOR1_PIN 18
#define MOTOR2_PIN 19

// --- LEDy ---
#define LED_PIN 21

// --- DFPlayer ---
#define DF_RX 16
#define DF_TX 17
#define DF_BUSY 32

HardwareSerial dfSerial(1);
DFRobotDFPlayerMini dfplayer;

bool sensor1_triggered = false;
bool sensor2_triggered = false;
bool effect_started = false;
bool wait_for_final = false;
unsigned long last_sound_time = 0;

void shortVibration() {
  digitalWrite(MOTOR1_PIN, HIGH);
  digitalWrite(MOTOR2_PIN, HIGH);
  delay(400);
  digitalWrite(MOTOR1_PIN, LOW);
  digitalWrite(MOTOR2_PIN, LOW);
}

void playSound(uint8_t track) {
  while (digitalRead(DF_BUSY) == LOW) {
    delay(50);
  }
  delay(150);
  dfplayer.play(track);
  Serial.print("Odtwarzam plik: ");
  Serial.println(track);
}

void triggerFinalVibrationEffect() {
  while (digitalRead(DF_BUSY) == LOW) {
    int delayTime = random(80, 250);
    int pattern = random(0, 4);

    switch (pattern) {
      case 0:
        digitalWrite(MOTOR1_PIN, HIGH);
        digitalWrite(MOTOR2_PIN, LOW);
        break;
      case 1:
        digitalWrite(MOTOR1_PIN, LOW);
        digitalWrite(MOTOR2_PIN, HIGH);
        break;
      case 2:
        digitalWrite(MOTOR1_PIN, HIGH);
        digitalWrite(MOTOR2_PIN, HIGH);
        break;
      case 3:
        digitalWrite(MOTOR1_PIN, LOW);
        digitalWrite(MOTOR2_PIN, LOW);
        break;
    }

    delay(delayTime);
    digitalWrite(MOTOR1_PIN, LOW);
    digitalWrite(MOTOR2_PIN, LOW);
    delay(60);
  }
}

void setup() {
  Serial.begin(115200);
  pinMode(SENSOR1_PIN, INPUT_PULLUP);
  pinMode(SENSOR2_PIN, INPUT_PULLUP);

  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW);

  pinMode(MOTOR1_PIN, OUTPUT);
  pinMode(MOTOR2_PIN, OUTPUT);
  digitalWrite(MOTOR1_PIN, LOW);
  digitalWrite(MOTOR2_PIN, LOW);

  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, HIGH);

  pinMode(DF_BUSY, INPUT_PULLUP);
  dfSerial.begin(9600, SERIAL_8N1, DF_RX, DF_TX);
  if (!dfplayer.begin(dfSerial)) {
    Serial.println("DFPlayer nie znaleziony!");
  } else {
    dfplayer.volume(25);
  }

  Serial.println("System gotowy – czekam na zwarcia");
}

void loop() {
  if (digitalRead(SENSOR1_PIN) == LOW && !sensor1_triggered) {
    sensor1_triggered = true;
    Serial.println("Zwarcie: blaszka 1");
    playSound(1);
    shortVibration();
    delay(500);
    last_sound_time = millis();
  }

  if (digitalRead(SENSOR2_PIN) == LOW && !sensor2_triggered) {
    sensor2_triggered = true;
    Serial.println("Zwarcie: blaszka 2");
    playSound(2);
    shortVibration();
    delay(500);
    last_sound_time = millis();
  }

  if (sensor1_triggered && sensor2_triggered && !effect_started && millis() - last_sound_time > 3500) {
    effect_started = true;
    Serial.println("Start efektu końcowego (chaos + przekaźnik + dźwięk 3)");
    playSound(3);
    triggerFinalVibrationEffect();
    delay(1000);
    digitalWrite(RELAY_PIN, HIGH);
    Serial.println("Przekaźnik włączony!");
  }

  delay(50);
}
